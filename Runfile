require "runfile-tasks"
require "byebug"
require "lp"
require_relative 'lib/madman'

title   "Madman Developer Toolbelt"
summary "Runfile tasks for building the Madman gem"
version Madman::VERSION

RunfileTasks::RubyGems.all 'madman'
RunfileTasks::Testing.rspec
RunfileTasks::Docs.rdoc

usage_commands = {
  'usage'        => 'madman',
  'render'       => 'madman render',
  'render-help'  => 'madman render --help',
  'preview'      => 'madman preview',
  'preview-help' => 'madman preview --help',
  'serve'        => 'madman serve',
  'serve-help'   => 'madman serve --help',
  'nav'          => 'madman nav',
  'nav-help'     => 'madman nav --help',
}

help   "Run YARD server"
action :yard do
  run "yard server -p3000 -B0.0.0.0 -r"
end

help   "Run interactive console"
action :console, :c do
  run "bundle exec bin/console"
end

help   "Generate TOC to toc.txt"
action :toc do
  run! 'gh-md-toc README.md > toc.txt'
end

help   "Generate changelog"
action :changelog do
  run 'github_changelog_generator --cache-file tmp/changlog-cache'  
  run "git commit -am 'update changelog' && git push"
end

help   "Inject usage to README"
action :usage do
  doc = Madman::Document.from_file 'README.md'

  usage_commands.each do |marker, command|
    doc.inject command_output(command), marker: marker
  end

  doc.save
end

help   "Count lines of code"
action :cloc do
  run "cloc . --exclude-dir coverage,spec,templates,tmp,dev --exclude-ext yml"
end

def command_output(command)
  say "Executing !txtgrn!#{command}"
  "\n```\n" + "$ #{command}\n" + `#{command}`.chomp + "\n```\n"
end

require_relative 'debug.rb' if File.exist? 'debug.rb'

